#+TITLE: Github Action Tools that can run locally
#+DESCRIPTION: Adhoc Development Workflows devised during Proof of Concept demo in this repo. This repo aims to simulate a CNCF Community project that chooses to make use of Github actions to launch Prow Plugins


* Devlopment Iteration

This repo contains an a Github Action that will launch a service that is
configured with a set of Prow Plugins that are used by the Kubernetes community
to shepard code and non-code submissions to the suite of Kubernetes git repos
that are hosted on Github.

The inital Github Action file that we are using is here ...

./.github/workflows/prow-hook.yaml

This github action depends on the container cncf-infra/prow-github-action:latest
over in [[https://github.com/cncf-infra/prow-github-action][https://github.com/cncf-infra/prow-github-action]] and that container can
alunch Hook which is the Prow component that connects Github Events to Prow
Plugins.

Prow Plugins implement the processes and procedures that allow submissions from
the community to be commited safely to their relevent repos.

** Github workflows
#+name: Watch the last run github action
#+begin_src shell
cd ~/cncf-infra/prow-github-action
gh run watch `gh run list --json databaseId --jq '.[0].databaseId'`
#+end_src

#+RESULTS:
#+begin_example
Run Publish (2870670116) has already completed with 'success'
#+end_example

#+name: View the last run github action
#+begin_src shell
cd ~/cncf-infra/prow-github-action
gh run view `gh run list --json databaseId --jq '.[0].databaseId'`
#+end_src

#+RESULTS:
#+begin_example

✓ main Publish · 2870670116
Triggered via push about 1 hour ago

JOBS
✓ Publish in 2m23s (ID 7865915079)

For more information about the job, try: gh run view --job=7865915079
View this run on GitHub: https://github.com/cncf-infra/prow-github-action/actions/runs/2870670116
#+end_example

The gh cli client can display infor about workflow
#+name: list workflows
#+begin_src shell
gh workflow list -a
#+end_src

#+RESULTS: list workflows
#+begin_example
Assign reviewers from OWNERS files	active	32469556
#+end_example

#+name: view workflow
#+begin_src shell
gh workflow view 32469556
#+end_src

#+RESULTS: view workflow
#+begin_example
Assign reviewers from OWNERS files - prow-hook.yaml
ID: 32469556

Total runs 17
Recent runs
completed	cancelled	Add workflow dispatch	Assign reviewers from OWNERS files	main	workflow_dispatch	2m3s	2864866203
completed	cancelled	Add workflow dispatch	Assign reviewers from OWNERS files	main	push	2m21s	2864865121
completed	failure	Doit	Assign reviewers from OWNERS files	main	push	1h0m34s	2864808198
completed	failure	uncomment tmate	Assign reviewers from OWNERS filess	main	push	16m4s	2864731231
completed	failure	bump	Assign reviewers from OWNERS filess	main	push	22s	2864717814

To see more runs for this workflow, try: gh run list --workflow prow-hook.yaml
To see the YAML for this workflow, try: gh workflow view prow-hook.yaml --yaml
#+end_example

#+name: view publish.yml
#+begin_src shell :wrap "src yaml"
gh workflow view prow-hook.yaml --yaml
#+end_src

#+RESULTS: view publish.yml
#+begin_src yaml
name: Prow Github Action
on:
  # via gh workflow run
  workflow_dispatch:
  pull_request_X:
  # push:
  # pull_request:
  #   branches: ["main"]
jobs:
  prow_github_hook:
    name: Prow Hook Service
    services:
      hook:
        image: ghcr.io/cncf-infra/prow-github-action:latest
        ports:
          -lkjhsadf 8080:80
        env:
          HMAC: ${{ secrets.HMAC }}
          HOOK_CONFIG: ${{ secrets.HOOK_CONFIG }}
          PLUGIN_CONFIG: ${{ secrets.PLUGIN_CONFIG }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
        options: --name "hook" --entrypoint "/var/run/ko/svc-entrypoint.sh"
        volumes:
          - ${{ github.workspace }}:/workspace
        # would be good if the container had a healthcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - name: Start hook plugin action
        uses: cncf-infra/prow-github-action@main
        with:
          hmac: ${{ secrets.HMAC }}
          hook-config: ${{ secrets.HOOK_CONFIG }}
          plugin-config: ${{ secrets.PLUGIN_CONFIG }}
#+end_src

#+name: list workflow runs
#+begin_src shell :wrap "src "
gh run list --workflow prow-hook.yaml
#+end_src

#+RESULTS: list workflow runs
#+begin_src
completed	cancelled	Add workflow dispatch	Assign reviewers from OWNERS files	main	workflow_dispatch	2864866203	2m3s	18h
completed	cancelled	Add workflow dispatch	Assign reviewers from OWNERS files	main	push	2864865121	2m21s	18h
completed	failure	Doit	Assign reviewers from OWNERS files	main	push	2864808198	1h0m34s	19h
completed	failure	uncomment tmate	Assign reviewers from OWNERS filess	main	push	2864731231	16m4s	19h
completed	failure	bump	Assign reviewers from OWNERS filess	main	push	2864717814	22s	19h
completed	failure	Trigger	Assign reviewers from OWNERS files	main	push	2864343749	17s	21h
completed	failure	Add input via with: to pga	Assign reviewers from OWNERS file	main	push	2864323727	23s	21h
completed	failure	YATTTT	Assign reviewers from OWNERS file	main	push	2864246215	22s	21h
completed	failure	YAT	Assign reviewers from OWNERS files	main	push	2864209531	20s	21h
completed	failure	Trigger again	Assign reviewers from OWNERS file	main	push	2864188510	19s	21h
completed	cancelled	Add tmate debug step	Assign reviewers from OWNERS files	main	push	2864041340	32m45s	22h
completed	failure	Trigger	Assign reviewers from OWNERS files	main	push	2864017768	22s	22h
completed	failure	Trigger a run	Assign reviewers from OWNERS files	main	push	2863967864	29s	22h
completed	failure	This how you do it:	Assign reviewers from OWNERS files	main	push	2863946791	16s	22h
completed	failure	Breaking as this will not work	Assign reviewers from OWNERS files	main	push	2863939797	10s	22h
completed	failure	Add checkout action	Assign reviewers from OWNERS files	main	push	2863875801	22s	23h
completed	failure	Rename to prow-hook.yaml and use :main action tag	Assign reviewers from OWNERS files	main	push	2863859704	27s	23h
#+end_src
completed	cancelled	Add workflow dispatch	Assign reviewers from OWNERS files	main	workflow_dispatch	2864866203	2m3s	12h
completed	cancelled	Add workflow dispatch	Assign reviewers from OWNERS files	main	push	2864865121	2m21s	12h
completed	failure	Doit	Assign reviewers from OWNERS files	main	push	2864808198	1h0m34s	12h
completed	failure	uncomment tmate	Assign reviewers from OWNERS filess	main	push	2864731231	16m4s	13h
completed	failure	bump	Assign reviewers from OWNERS filess	main	push	2864717814	22s	13h
completed	failure	Trigger	Assign reviewers from OWNERS files	main	push	2864343749	17s	15h
completed	failure	Add input via with: to pga	Assign reviewers from OWNERS file	main	push	2864323727	23s	15h
completed	failure	YATTTT	Assign reviewers from OWNERS file	main	push	2864246215	22s	15h
completed	failure	YAT	Assign reviewers from OWNERS files	main	push	2864209531	20s	15h
completed	failure	Trigger again	Assign reviewers from OWNERS file	main	push	2864188510	19s	15h
completed	cancelled	Add tmate debug step	Assign reviewers from OWNERS files	main	push	2864041340	32m45s	16h
completed	failure	Trigger	Assign reviewers from OWNERS files	main	push	2864017768	22s	16h
completed	failure	Trigger a run	Assign reviewers from OWNERS files	main	push	2863967864	29s	16h
completed	failure	This how you do it:	Assign reviewers from OWNERS files	main	push	2863946791	16s	16h
completed	failure	Breaking as this will not work	Assign reviewers from OWNERS files	main	push	2863939797	10s	16h
completed	failure	Add checkout action	Assign reviewers from OWNERS files	main	push	2863875801	22s	16h
completed	failure	Rename to prow-hook.yaml and use :main action tag	Assign reviewers from OWNERS files	main	push	2863859704	27s	17h
#+end_src:0
** Run a Github action locally usng act
Act runs Github actions on a local dev environment https://github.com/nektos/act

Hippie and Rob used this today and it was useful but the next step on our
journey here is to standup the hook component of prow as a service to accept
incoming GH Event data on the webhook where it listens. Current version of act
may not have a Github Actions service as a feature. ref: [[https://github.com/nektos/act/issues/173][Services not working
#173]]

As a means of checking the wiring up of our google ko built container,
ghcr.io/cncf-infra/prow-github-action:latest over in
cncf-infra/prow-github-action it was suitable for our needs today.

**** Installing act
#+name: install act v0.2.30
#+description: Installs a released version of act.
#+begin_src shell
mkdir ~/act && cd ~/act
# -L required to allow curl to follow a redirect - HBD??
curl -L https://github.com/nektos/act/releases/download/v0.2.30/act_Linux_x86_64.tar.gz -o ~/act/act.tar.gz
tar xvf act.tar.gz
cp act /usr/local/bin
act --help
#+end_src

#+RESULTS:
#+begin_example
LICENSE
README.md
act
Run GitHub actions locally by specifying the event name (e.g. `push`) or an action name directly.

Usage:
  act [event name to run]
If no event name passed, will default to "on: push" [flags]

Flags:
  -a, --actor string                                      user that triggered the event (default "nektos/act")
      --artifact-server-path string                       Defines the path where the artifact server stores uploads and retrieves downloads from. If not specified the artifact server will not start.
      --artifact-server-port string                       Defines the port where the artifact server listens (will only bind to localhost). (default "34567")
  -b, --bind                                              bind working directory to container, rather than copy
      --bug-report                                        Display system information for bug report
      --container-architecture string                     Architecture which should be used to run containers, e.g.: linux/amd64. If not specified, will use host default architecture. Requires Docker server API Version 1.41+. Ignored on earlier Docker server platforms.
      --container-cap-add stringArray                     kernel capabilities to add to the workflow containers (e.g. --container-cap-add SYS_PTRACE)
      --container-cap-drop stringArray                    kernel capabilities to remove from the workflow containers (e.g. --container-cap-drop SYS_PTRACE)
      --container-daemon-socket string                    Path to Docker daemon socket which will be mounted to containers (default "/var/run/docker.sock")
      --defaultbranch string                              the name of the main branch
      --detect-event                                      Use first event type from workflow as event that triggered the workflow
  -C, --directory string                                  working directory (default ".")
  -n, --dryrun                                            dryrun mode
      --env stringArray                                   env to make available to actions with optional value (e.g. --env myenv=foo or --env myenv)
      --env-file string                                   environment file to read and use as env in the containers (default ".env")
  -e, --eventpath string                                  path to event JSON file
      --github-instance string                            GitHub instance to use. Don't use this if you are not using GitHub Enterprise Server. (default "github.com")
  -g, --graph                                             draw workflows
  -h, --help                                              help for act
      --insecure-secrets                                  NOT RECOMMENDED! Doesn't hide secrets while printing logs.
  -j, --job string                                        run job
      --json                                              Output logs in json format
  -l, --list                                              list workflows
      --no-recurse                                        Flag to disable running workflows from subdirectories of specified path in '--workflows'/'-W' flag
      --no-skip-checkout                                  Do not skip actions/checkout
  -P, --platform stringArray                              custom image to use per platform (e.g. -P ubuntu-18.04=nektos/act-environments-ubuntu:18.04)
      --privileged                                        use privileged mode
  -p, --pull                                              pull docker image(s) even if already present
  -q, --quiet                                             disable logging of output from steps
      --rebuild                                           rebuild local action docker image(s) even if already present
      --remote-name string                                git remote name that will be used to retrieve url of git repo (default "origin")
      --replace-ghe-action-token-with-github-com string   If you are using replace-ghe-action-with-github-com  and you want to use private actions on GitHub, you have to set personal access token
      --replace-ghe-action-with-github-com stringArray    If you are using GitHub Enterprise Server and allow specified actions from GitHub (github.com), you can set actions on this. (e.g. --replace-ghe-action-with-github-com =github/super-linter)
  -r, --reuse                                             don't remove container(s) on successfully completed workflow(s) to maintain state between runs
      --rm                                                automatically remove container(s)/volume(s) after a workflow(s) failure
  -s, --secret stringArray                                secret to make available to actions with optional value (e.g. -s mysecret=foo or -s mysecret)
      --secret-file string                                file with list of secrets to read from (e.g. --secret-file .secrets) (default ".secrets")
      --use-gitignore                                     Controls whether paths specified in .gitignore should be copied into container (default true)
      --userns string                                     user namespace to use
  -v, --verbose                                           verbose output
      --version                                           version for act
  -w, --watch                                             watch the contents of the local repo and run when files change
  -W, --workflows string                                  path to workflow file(s) (default "./.github/workflows/")
#+end_example

**** Running your git hub actions in your local repo
Once inside a repo you can run act and it will hunt for all available actions and run them
#+name: act
#+description: run github actions found in ~/cncf-infra/mock-project-repo/.github/workflows/prow-hook.yaml
#+begin_src shell :wrap "src" :results verbatim
act
echo
#+end_src

#+RESULTS:
#+begin_src
[Assign reviewers from OWNERS files/Prow Github Hook] 🚀  Start image=catthehacker/ubuntu:act-latest
[Assign reviewers from OWNERS files/Prow Github Hook]   🐳  docker pull image=catthehacker/ubuntu:act-latest platform= username= forcePull=false
#+end_src

If you get a volume is in use error...
#+begin_quote
ii@prow-github-actions:~/cncf-infra/mock-project-repo$ act
[Assign reviewers from OWNERS files/Prow Github Hook] 🚀  Start image=catthehacker/ubuntu:act-latest
[Assign reviewers from OWNERS files/Prow Github Hook]   🐳  docker pull image=catthehacker/ubuntu:act-latest platform= username= forcePull=false
Error: Error occurred running finally: Error occurred running finally: Error response from daemon: remove act-Assign-reviewers-from-OWNERS-files-Prow-Github-Hook: volume is in use - [2d3bc03511c60e4ff48cddc9698d318244d6ea64f94b716346fd9d8a35448afe] (original error: <nil>) (original error: Error response from daemon: remove act-Assign-reviewers-from-OWNERS-files-Prow-Github-Hook: volume is in use - [2d3bc03511c60e4ff48cddc9698d318244d6ea64f94b716346fd9d8a35448afe])
ii@prow-github-actions:~/cncf-infra/mock-project-repo$
#+end_quote

you will need to perhaps stop the docker containers associated with act.

We were also concerned about cache busting any new builf of the container so
so we removed the image.
#+begin_src sh
docker rmi --force ghcr.io/cncf-infra/prow-github-action:latest
docker rm -f act-Assign-rev-1
docker rm -f act-Publish-Publish
#+end_src

#+begin_src sh
  dvolume() {   local volume volumes_to_list=${1:-$(docker volume ls --quiet)};   for volume in $volumes_to_list; do     sudo ls -lRa "$(docker volume inspect --format '{{ .Mountpoint }}' "$volume")";     echo;   done; }
  dvolume
#+end_src

#+RESULTS:
We no longer need to do this as we have reduced our dependancies on GH Secrets
#+name: run with local secrets
#+begin_src shell
act --secret-file .secrets --insecure-secrets
#+end_src
